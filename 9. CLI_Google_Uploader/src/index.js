const fs = require("fs");
const { google } = require("googleapis");
const inquirer = require("inquirer");
const axios = require("axios");

// –Ø —Ä–æ–∑—É–º—ñ—é, —â–æ –ø–æ —Ö–æ—Ä–æ—à–æ–º—É –∫—Ä–∞—à–µ –∑–∞—Ö–æ–≤–∞—Ç–∏ —Ü–µ–π —Ç–æ–∫–µ–Ω. –ê–ª–µ —Ç–∞–∫ —è–∫, —Ü–µ –≤—Å—å–æ–≥–æ –Ω–∞—á–∞–Ω–Ω—è —ñ –æ–¥–Ω–∞ –∑–º—ñ–Ω–Ω–∞ —è–∫—É –≤–∞—Ä—Ç–æ –∑–∞—Ö–æ–≤–∞—Ç–∏ (–Ω–∞ –º–æ—é –¥—É–º–∫—É). –Ø –Ω–µ —Å—Ç–∞–≤ —Ö–æ–≤–∞—Ç–∏ —ó—ó –≤ —Ñ–∞–π–ª .env
const TOKEN = "hk4ctD8S0OuM5l95YEZg7iIN4tdZiEBqAF5CVBfpheonjwOnjo9ovZDj0MsC";

const shorten = axios.create({
  baseURL: "https://api.tinyurl.com/",
  headers: {
    Authorization: `Bearer ${TOKEN}`,
  },
});

const KEYFILEPATH = "lofty-apex-368511-338be4cfdc3b.json";
const SCOPES = ["https://www.googleapis.com/auth/drive"];

const auth = new google.auth.GoogleAuth({
  keyFile: KEYFILEPATH,
  scopes: SCOPES,
});

let link = null;

async function googleDriveUpload({ name, path, extension }) {
  const driveService = google.drive({ version: "v3", auth });

  const fileMetaData = {
    name: `${name ? name : Date.now()}.${extension}`,
    parents: ["1YXKF2qSowhv3PGuCSeqQcIecUJmL8B6X"],
  };

  const media = {
    mimeType: `image/${extension}`,
    body: fs.createReadStream(path),
  };

  const response = await driveService.files.create({
    resource: fileMetaData,
    media,
  });

  const id = await response.data.id;
  link = `https://drive.google.com/file/d/${id}/view`;

  console.log("üöÄ ~ photoLink", link);
}

async function startCLI() {
  const file = {};

  const fileLinkUser = await inquirer.prompt([
    {
      name: "path",
      type: "input",
      message: "–í–≤–µ–¥—ñ—Ç—å —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª–∞, —è–∫–∏–π –≤–∏ –±–∞–∂–∞—î—Ç–µ –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏: ",
    },
  ]);

  const rename = await inquirer.prompt([
    {
      name: "res",
      type: "confirm",
      message: "–•–æ—á–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ –ø–æ—á–∞—Ç–∫–æ–≤—É –Ω–∞–∑–≤—É?",
    },
  ]);

  file.name = await newName(fileLinkUser.path, rename.res);
  file.path = fileLinkUser.path;
  file.extension = file.path.split(".").pop();

  await googleDriveUpload(file);

  const shorten = await inquirer.prompt([
    {
      name: "isTinyLink",
      type: "confirm",
      message: "–•–æ—á–µ—Ç–µ —Å–∫–æ—Ä–æ—Ç–∏—Ç–∏ –ø–æ—Å–∏–ª–∞–Ω–Ω—è?",
    },
  ]);

  if (shorten.isTinyLink) {
    await tinyLink();
  }

  link = null;

  main();
}

async function newName(filePath, res) {
  if (!res) {
    return filePath.split("/").pop().split(".")[0];
  }

  const newName = await inquirer.prompt([
    {
      name: "name",
      type: "input",
      message: "–í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É: ",
    },
  ]);

  return newName.name;
}

async function tinyLink() {
  try {
    const { data } = await shorten.post("create", {
      url: link,
      domain: "tiny.one",
    });
    console.log("üöÄ ~ shortenLink", data.tiny_url);
  } catch (error) {
    console.log("üöÄ ~ –û–π —Å—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ");
  }
}

startCLI();
